{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","message","className","baseUrl","request","axios","get","notExisting","id","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","noteToUpdate","find","updatedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","e","target","type","ReactDOM","render","document","getElementById"],"mappings":"oLAiBeA,EAfF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,8BACI,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,UCGrCI,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAe,OAAZA,EACQ,KAIP,qBAAKC,UAAU,QAAf,SACKD,K,gBCPPE,EAAU,aAwBD,EAtBA,WACX,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAChBC,GAAI,IACJV,QAAS,mCACTW,KAAM,2BACNZ,WAAW,GAGf,OAAOO,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBvCK,EAAS,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GAuFSC,EAlFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGvB,MAAK,SAAAwB,GACJT,EAASS,QAEZ,IAEH,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAqC9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAAS6B,IACvB,yBACE/B,QAAS,kBAAM8B,GAAYD,IAD7B,kBAEQA,EAAU,YAAc,SAEhC,6BACGO,EAAYE,KAAI,SAAA3C,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA/BD,SAACa,GAC1B,IAAM8B,EAAed,EAAMe,MAAK,SAAA7C,GAAI,OAAIA,EAAKc,KAAOA,KAC9CgC,EAAW,2BAAQF,GAAR,IAAsBzC,WAAYyC,EAAazC,YAEhEoC,EACUzB,EAAIgC,GACX9B,MAAK,SAAA+B,GACJhB,EAASD,EAAMa,KAAI,SAAA3C,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO+C,SAEpDC,OAAM,SAAAC,GACLZ,EAAgB,aAAD,OAAcO,EAAaxC,QAA3B,sCACf8C,YAAW,WACTb,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKc,KAAOA,SAiBdqC,CAAmBnD,EAAKc,MAF3Cd,EAAKc,SAMhB,uBAAMsC,SApDM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjBnD,QAAS4B,EACTjB,MAAM,IAAIyC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BpB,EACUgB,GACPvC,MAAK,SAAA+B,GACJhB,EAASD,EAAMX,OAAO4B,IACtBd,EAAW,QAuCb,UACE,uBACE2B,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAO7B,EAAW6B,EAAEC,OAAOH,UAEvC,wBAAQI,KAAK,SAAb,qBAEF,cAAC,EAAD,QC7FNC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.dd219209.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <div>\r\n            <li>\r\n                {note.content}\r\n                <button onClick={toggleImportance}>{label}</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const notExisting = {\r\n        id: 1000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true\r\n    }\r\n\r\n    return request.then(response => response.data.concat(notExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const addNote = (event) => {\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const noteToUpdate = notes.find(note => note.id === id)\n    const updatedNote = { ...noteToUpdate, important: !noteToUpdate.important }\n\n    noteService\n      .update(id, updatedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`the note '${noteToUpdate.content}' was already deleted from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(note => note.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <button\n        onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={(e) => setNewNote(e.target.value)}\n        />\n        <button type='submit'>save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}